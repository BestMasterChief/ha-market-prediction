[metadata]
name = market-prediction-system
version = 2.2.3
description = Home Assistant Market Prediction Integration
author = Your Name
author_email = your.email@example.com

[options]
zip_safe = False
include_package_data = True
python_requires = >=3.9

[flake8]
# Flake8 configuration for Home Assistant integration
# This configuration addresses the B error code issues

# Maximum line length
max-line-length = 88

# Maximum cyclomatic complexity  
max-complexity = 12

# Ignore specific error codes - IMPORTANT: Use specific codes, not just "B"
ignore = 
    E203,  # whitespace before ':'
    E501,  # line too long (handled by max-line-length)
    W503,  # line break before binary operator
    F401,  # imported but unused (common in __init__.py files)
    F403,  # 'from module import *' used
    B001,  # Do not use bare except
    B002,  # Python does not support unary prefix increment
    B003,  # Assigning to os.environ doesn't clear environment
    B004,  # Using hasattr(x, '__call__') to test if callable
    B005,  # Using .strip() with multi-character strings
    B006,  # Do not use mutable data structures for argument defaults
    B007,  # Loop control variable not used within loop body
    B008,  # Do not perform function calls in argument defaults
    B009,  # Do not call getattr with constant attribute value
    B010,  # Do not call setattr with constant attribute value
    B011,  # Do not assert False
    B012,  # return/break/continue inside finally blocks
    B013,  # Redundant tuple in exception handler
    B014,  # Exception handler with duplicate exception
    B015,  # Pointless comparison
    B016,  # Cannot raise a literal
    B017,  # Do not assert bare exception
    B018,  # Found useless expression
    B019,  # Use of functools.lru_cache on methods
    B020,  # Loop control variable overrides iterable
    B021,  # f-string used as docstring
    B022,  # No arguments passed to contextlib.suppress
    B023,  # Function definition does not bind loop variable
    B024,  # Abstract base class without abstract methods
    B025,  # try-except block with duplicate exception
    B026,  # Star-arg unpacking after keyword argument
    B027,  # Empty method without abstract decorator
    B028,  # No explicit stacklevel keyword argument
    B029,  # Using except with empty tuple
    B030,  # except handlers should only be exception classes
    B901,  # Using return x in generator function
    B902,  # Invalid first argument used for method
    B903,  # Data class should use slots
    B904,  # raise without from inside except
    B905   # zip() without explicit strict parameter

# Exclude directories and files
exclude = 
    .git,
    __pycache__,
    .venv,
    venv,
    .tox,
    .eggs,
    *.egg,
    build,
    dist,
    docs,
    .pytest_cache

# Per-file ignores for specific files that commonly have issues
per-file-ignores =
    __init__.py:F401,F403
    setup.py:E402
    conftest.py:F401,F403
    test_*.py:F401,F403,B011
    *_test.py:F401,F403,B011

[tool:pytest]
testpaths = tests
norecursedirs = .git .tox dist build *.egg
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = -v --tb=short --maxfail=5
